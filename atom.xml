<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码路漫漫</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://reecode.github.io/"/>
  <updated>2018-06-26T16:51:40.676Z</updated>
  <id>https://reecode.github.io/</id>
  
  <author>
    <name>ReeCode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git配置多个ssh的几个问题</title>
    <link href="https://reecode.github.io/2018/06/26/git0626/"/>
    <id>https://reecode.github.io/2018/06/26/git0626/</id>
    <published>2018-06-26T15:28:37.000Z</published>
    <updated>2018-06-26T16:51:40.676Z</updated>
    
    <content type="html"><![CDATA[<p>微信小程序最近一次的更新（2018.06.12）在开发者工具中新增了TGit工具栏入口，于是决定将在开发的小程序代码托管到腾讯云的TGit上。由于已经配置了github的SSH，需要为git配置多个SSH满足二者同时工作的要求。过程很简单，基本过程如下：</p><h1 id="一-配置过程"><a href="#一-配置过程" class="headerlink" title="一 配置过程"></a>一 配置过程</h1><h2 id="1-生成github的ssh-key"><a href="#1-生成github的ssh-key" class="headerlink" title="1 生成github的ssh-key"></a>1 生成github的ssh-key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email@github.com” -f ~/.ssh/id-rsa</span></span><br></pre></td></tr></table></figure><h2 id="2-生成TGit的ssh-key"><a href="#2-生成TGit的ssh-key" class="headerlink" title="2 生成TGit的ssh-key"></a>2 生成TGit的ssh-key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email@git.cloud.tencent.com” -f ~/.ssh/id-rsa-tencent</span></span><br></pre></td></tr></table></figure><ol><li>如果不加 <code>-f ~/.ssh/id-rsa</code>，会弹出<code>Enter file in which to save the key (/.ssh/id_rsa)</code>需要用户将生产的ssh-key保存在某个文件中，默认为当前操作目录下的id_ras中，需要用户另行将产生id_ras以及id_ras.pub复制到git默认访问的位置：Mac为<code>~/.ssh/</code>下，Windows为<code>C:\Users\popfisher\.ssh</code>下；</li><li>两次ssh-key使用不同名字加以区分，例如TGit存储在<code>id_rsa_tencent</code>中;</li><li>TGit的邮箱为创建的id名，可在腾讯云下查找到；</li><li>输入以上命令后会提示<code>Enter passphrase (empty for no passphrase):</code>让你输入访问密码，建议此处省略，否则每次实用git都会输入密码；</li></ol><h2 id="3-将生成的公钥配置到git服务器上"><a href="#3-将生成的公钥配置到git服务器上" class="headerlink" title="3 将生成的公钥配置到git服务器上"></a>3 将生成的公钥配置到git服务器上</h2><p>将对应的id_rsa.pub中的信息复制到github与TGit上SSH中,如下图：<br><img src="/2018/06/26/git0626/github.png" title="github配置ssh"><br><img src="/2018/06/26/git0626/TGit.png" title="TGit配置ssh"></p><h2 id="4-修改配置文件"><a href="#4-修改配置文件" class="headerlink" title="4 修改配置文件"></a>4 修改配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 配置github.com</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line"></span><br><span class="line"># 配置git.cloud.tencent.com</span><br><span class="line">Host git.cloud.tencent.com</span><br><span class="line">    HostName git.cloud.tencent.com</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_tencent</span><br><span class="line">    PreferredAuthentications publickey</span><br></pre></td></tr></table></figure><h2 id="5-测试是否联通"><a href="#5-测试是否联通" class="headerlink" title="5 测试是否联通"></a>5 测试是否联通</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line">Welcome to GitHub, xxxxx! 即成功。</span><br></pre></td></tr></table></figure><h1 id="二-踩到的坑"><a href="#二-踩到的坑" class="headerlink" title="二 踩到的坑"></a>二 踩到的坑</h1><h1 id="1-TGit中https与ssh方式域名不一致"><a href="#1-TGit中https与ssh方式域名不一致" class="headerlink" title="1 TGit中https与ssh方式域名不一致"></a>1 TGit中https与ssh方式域名不一致</h1><p><strong>注意：</strong><br>TGit中https方式与ssh方式域名不一致。</p><ul><li>https方式域名为<code>git.qcloud.com</code></li><li>ssh方式域名为<a href="mailto:`git@git.cloud.tencent.com" target="_blank" rel="noopener">`git@git.cloud.tencent.com</a>`</li></ul><p>这就导致了在测试是否联通的时候报如下几个错：</p><ol><li>测试<code>$ ssh -t git@git.qcloud.com</code>报错<a href="mailto:`git@git.qcloud.com" target="_blank" rel="noopener">`git@git.qcloud.com</a>: Permission denied (publickey).  `即没有访问git.qcloud.com的公钥；</li><li>测试<code>$ ssh -t git@git.qcloud.tencent.com</code>报错<code>ssh: Could not resolve hostname git.qcloud.tencent.com: nodename nor servname provided, or not known</code>.即无法访问到这个域名。</li></ol><h1 id="2-shell-request-failed-on-channel-0-问题"><a href="#2-shell-request-failed-on-channel-0-问题" class="headerlink" title="2 shell request failed on channel 0 问题"></a>2 shell request failed on channel 0 问题</h1><p>在测试正确的TGit过程中，即命令<code>$ ssh -t git@git.cloud.tencent.com</code>，会报错<code>shell request failed on channel 0</code>，在网上查了一些相关的解释，以及通过调试模式得到相关log为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">debug1: channel 0: new [client-session]</span><br><span class="line">debug1: Entering interactive session.</span><br><span class="line">debug1: pledge: network</span><br><span class="line">debug1: Sending environment.</span><br><span class="line">debug1: Sending env LANG = zh_CN.UTF-8</span><br><span class="line">shell request failed on channel 0</span><br></pre></td></tr></table></figure></p><p>ssh已经建立链接，进入交互回话，但是 channel 0 无应答。<br>分析相关原因为：</p><ol><li>腾讯TGit有相关限制；</li><li>我没有将TGit的user-name与user-email 配置为全局</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微信小程序最近一次的更新（2018.06.12）在开发者工具中新增了TGit工具栏入口，于是决定将在开发的小程序代码托管到腾讯云的TGit上。由于已经配置了github的SSH，需要为git配置多个SSH满足二者同时工作的要求。过程很简单，基本过程如下：&lt;/p&gt;
&lt;h1 i
      
    
    </summary>
    
      <category term="前端" scheme="https://reecode.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="git" scheme="https://reecode.github.io/tags/git/"/>
    
      <category term="ssh" scheme="https://reecode.github.io/tags/ssh/"/>
    
      <category term="TGit" scheme="https://reecode.github.io/tags/TGit/"/>
    
  </entry>
  
  <entry>
    <title>网易2018校园招聘编程题真题集合（二）</title>
    <link href="https://reecode.github.io/2018/05/20/brushing0520/"/>
    <id>https://reecode.github.io/2018/05/20/brushing0520/</id>
    <published>2018-05-20T14:21:14.000Z</published>
    <updated>2018-05-24T14:26:19.298Z</updated>
    
    <content type="html"><![CDATA[<p>继续第二期，这部分的三道题变得比较复杂了。</p><h1 id="Qus4-游历魔法王国"><a href="#Qus4-游历魔法王国" class="headerlink" title="Qus4 游历魔法王国"></a>Qus4 游历魔法王国</h1><h2 id="试题描述"><a href="#试题描述" class="headerlink" title="试题描述"></a>试题描述</h2><p>魔法王国一共有<code>n</code>个城市,编号为<code>0~n-1</code>号,<code>n</code>个城市之间的道路连接起来恰好构成一棵树。<br>小易现在在<code>0</code>号城市,每次行动小易会从当前所在的城市走到与其相邻的一个城市,小易最多能行动<code>L</code>次。<br>如果小易到达过某个城市就视为小易游历过这个城市了,小易现在要制定好的旅游计划使他能游历最多的城市,请你帮他计算一下他最多能游历过多少个城市(注意0号城市已经游历了,游历过的城市不重复计算)。</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入包括两行,第一行包括两个正整数<code>n(2 ≤ n ≤ 50)</code>和<code>L(1 ≤ L ≤ 100)</code>,表示城市个数和小易能行动的次数。<br>第二行包括<code>n-1</code>个整数parent<a href="0 ≤ parent[i] ≤ i">i</a>, 对于每个合法的<code>i(0 ≤ i ≤ n - 2)</code>,在<code>(i+1)</code>号城市和<code>parent[i]</code>间有一条道路连接。</p></blockquote><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>输出一个整数,表示小易<code>最多</code>能游历的城市数量。</p></blockquote><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><blockquote><p><strong>输入</strong></p><blockquote><p>5 2<br>0 1 2 3</p></blockquote><p><strong>输出</strong></p><blockquote><p>3</p></blockquote></blockquote><h2 id="试题分析"><a href="#试题分析" class="headerlink" title="试题分析"></a>试题分析</h2><p>试题最后抽象成求树的最大深度。<br>输入描述中第二行 <strong>第二行包括<code>n-1</code>个整数<code>parent[i](0 ≤ parent[i] ≤ i)</code>, 对于每个合法的<code>i(0 ≤ i ≤ n - 2)</code>,在<code>(i+1)</code>号城市和<code>parent[i]</code>间有一条道路连接</strong>，绕了半天，其实是描述树的形状。<br><strong>例如测试用例：</strong></p><blockquote><p>10 10<br>0 3 1 3 0 5 2 7 5</p></blockquote><p><strong>对应的关系如下：</strong></p><table><thead><tr><th>Tables</th><th style="text-align:center">Col 1</th><th style="text-align:center">Col 2</th><th style="text-align:center">Col 3</th><th style="text-align:center">Col 4</th><th style="text-align:center">Col 5</th><th style="text-align:center">Col 6</th><th style="text-align:center">Col 7</th><th style="text-align:center">Col 8</th><th style="text-align:center">Col 9</th></tr></thead><tbody><tr><td>子节点(i)</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">8</td><td style="text-align:center">9</td></tr><tr><td>父节点(parent[i])</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">7</td><td style="text-align:center">5</td></tr></tbody></table><p><strong>生成的树：</strong><br><img src="/2018/05/20/brushing0520/tree.png" title="生成的树"></p><p>树的结构有了之后，就只需要根据树的最大深度<code>depth</code>与可走的最大步数<code>L</code>之间的关系来判断最终的游历城市数量。</p><ol><li>当<code>depth ≥  L</code>时，那么能够游历的城市数即<code>L + 1</code>（因为出发位置在得0号城市，算是已经游历的城市）；</li><li>当<code>depth &lt;   L</code>时，即需要走重复的路。显而易见，返回需要走两遍相同的路径。最优化的行走方案是将旅程分为两个部分，一个部分为走到最大深度<code>depth</code>，另一部分为走重复路的短路径<code>(L-depth)/2</code>（即除了树的大深度外的步数，由于折返故除以2）。</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">argument</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = argument[<span class="number">0</span>].split(<span class="string">' '</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> l = <span class="built_in">parseInt</span>(argument[<span class="number">0</span>].split(<span class="string">' '</span>)[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">var</span> parents = argument[<span class="number">1</span>].split(<span class="string">' '</span>);</span><br><span class="line">    <span class="keyword">var</span> depth = [];</span><br><span class="line">    <span class="keyword">var</span> tempArray = [];</span><br><span class="line">    depth[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span>(depth[parents[i - <span class="number">1</span>]]) !== <span class="string">"undefined"</span>) &#123;</span><br><span class="line">            depth[i] = depth[parents[i - <span class="number">1</span>]] + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tempArray.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tempArray.length) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tempArray.length; i++) &#123;</span><br><span class="line">            depth[tempArray[i]] = depth[parents[tempArray[i] - <span class="number">1</span>]] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> max = <span class="built_in">Math</span>.max(...depth);</span><br><span class="line">    <span class="keyword">if</span> (max &gt;= l) &#123;</span><br><span class="line">        <span class="keyword">return</span> l + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>((l - max) / <span class="number">2</span>) + max + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> lines = [];</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    lines.push(line);</span><br><span class="line">&#125;</span><br><span class="line">print(main(lines));</span><br></pre></td></tr></table></figure><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><ol><li>代码中有一项未判断，即当步数<code>L&gt;(depth + (L-depth)/2)</code>时，部署应该为城市数<code>n</code>;</li><li>在生成树的过程中，由于遍历过程中可能部分节点在未生成时引用会出现<code>undefined</code>问题，故引入判断，在第15行处再循环一次；</li><li>第20行处实用了<code>ES6</code>中的<code>扩展运算符（ ... ）</code>，在学习<code>ES6</code>时再继续详细解答；</li><li>其实对于生成树与计算最大深度还是不太明白，该抽时间补一补数据结构了。</li></ol><h1 id="Qus5-重排数列"><a href="#Qus5-重排数列" class="headerlink" title="Qus5 重排数列"></a>Qus5 重排数列</h1><h2 id="试题描述-1"><a href="#试题描述-1" class="headerlink" title="试题描述"></a>试题描述</h2><p>小易有一个长度为N的正整数数列<code>A = {A[1], A[2], A[3]..., A[N]}</code>。<br>牛博士给小易出了一个难题:<br>对数列<code>A</code>进行重新排列,使数列A满足所有的<code>A[i] * A[i + 1](1 ≤ i ≤ N - 1)</code>都是<code>4</code>的倍数。<br>小易现在需要判断一个数列是否可以重排之后满足牛博士的要求。</p><h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入的第一行为数列的个数<code>t(1 ≤ t ≤ 10)</code>,<br>接下来每两行描述一个数列<code>A</code>,第一行为数列长度<code>n(1 ≤ n ≤ 10^5)</code><br>第二行为<code>n</code>个正整数<code>A[i](1 ≤ A[i] ≤ 10^9)</code></p></blockquote><h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>对于每个数列输出一行表示是否可以满足牛博士要求,如果可以输出<code>Yes</code>,否则输出<code>No</code>。</p></blockquote><h3 id="示例1-1"><a href="#示例1-1" class="headerlink" title="示例1"></a>示例1</h3><blockquote><p><strong>输入</strong></p><blockquote><p>2<br>3<br>1 10 100<br>4<br>1 2 3 4</p></blockquote><p><strong>输出</strong></p><blockquote><p>Yes<br>No</p></blockquote></blockquote><h2 id="试题分析-1"><a href="#试题分析-1" class="headerlink" title="试题分析"></a>试题分析</h2><p>根据题意，将数列<code>A</code>中的数字分为三类：</p><blockquote><p>n4 : 可以被4整除的数<br>n2 : 可以被2整除但不可以被4整除的数<br>n1 : 不可以被2整除的数</p></blockquote><p>那么如果要满足题目要求即<code>A[i] * A[i + 1](1 ≤ i ≤ N - 1)</code>都是<code>4</code>的倍数，则必须以下两种情况：</p><ol><li>数字<code>n1</code>的两侧都要有<code>n4</code>（数列第一个或最后一个只需满足一侧存在<code>n4</code>即可）；</li><li>数字<code>n2</code>的两侧要存在<code>n2</code>或者<code>n4</code>；</li></ol><p>那么对条件进行简化，数组<code>A</code>可能出现的情况：</p><ol><li><code>n4 &gt; = n1</code> —— 满足题目要求；</li><li><code>n4  = n1 - 1 &amp;&amp; n4 + n1 = A.length</code> —— 数列第一个与最后一个均为<code>n1</code>,满足题目要求；</li><li><code>n4 &lt; n1 - 1</code> —— 不满足</li></ol><p>这样就很清晰了，详情见代码实现</p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">argument</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tarArray = [],</span><br><span class="line">        resultArray = [],</span><br><span class="line">        n4 = <span class="number">0</span>,</span><br><span class="line">        n1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt; argument.length;) &#123;</span><br><span class="line">        tarArray.push(argument[i]);</span><br><span class="line">        i = i + <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tarArray.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> _ta = tarArray[i].split(<span class="string">" "</span>);</span><br><span class="line">        n4 = num_mod(&#123;</span><br><span class="line">            ta: _ta</span><br><span class="line">        &#125;);</span><br><span class="line">        n1 = num_mod(&#123;</span><br><span class="line">            ta: _ta,</span><br><span class="line">            mod: <span class="number">2</span>,</span><br><span class="line">            rtnMod: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n4 &gt;= n1 || (n4 &gt;= n1 - <span class="number">1</span> &amp;&amp; (n4 + n1) === _ta.length)) &#123;</span><br><span class="line">            resultArray.push(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resultArray.push(<span class="string">"No"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resultArray;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">num_mod</span>(<span class="params">argument</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> deal_arr = argument.ta; <span class="comment">//目标数组</span></span><br><span class="line">    <span class="keyword">var</span> _mod = <span class="keyword">typeof</span>(argument.mod) === <span class="string">"undefined"</span> ? <span class="number">4</span> : argument.mod; <span class="comment">//取模的被除数 默认为4</span></span><br><span class="line">    <span class="keyword">var</span> _rtnMod = <span class="keyword">typeof</span>(argument.rtnMod) === <span class="string">"undefined"</span> ? <span class="literal">true</span> : argument.rtnMod; <span class="comment">//返回值 默认为true true/取模后为0的个数 false/取模后不为0的个数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> _rtn = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; deal_arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (deal_arr[i] % _mod === <span class="number">0</span>) &#123;</span><br><span class="line">            _rtn = _rtn + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _rtnMod ? _rtn : (deal_arr.length - _rtn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lines = [];</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    lines.push(line);</span><br><span class="line">&#125;</span><br><span class="line">print(main(lines).join(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure><h2 id="反思-1"><a href="#反思-1" class="headerlink" title="反思"></a>反思</h2><ol><li>最开始的思路是按照题意，数列中的所有数字互相相乘，得出新的数列。判断新的数列中的数组是否能被4整除，如果得到的结果大于原数组length - 1 即满足条件，这样能通过最开始的两组数列的测验，因为开始的数列相对比较短（4个以下）;</li><li>写了一个取模的函数，参数采用<code>json</code>格式；</li></ol><h1 id="Qus6-最长公共子括号序列"><a href="#Qus6-最长公共子括号序列" class="headerlink" title="Qus6 最长公共子括号序列"></a>Qus6 最长公共子括号序列</h1><h2 id="试题描述-2"><a href="#试题描述-2" class="headerlink" title="试题描述"></a>试题描述</h2><p>一个<code>合法</code>的括号匹配序列被定义为:</p><ol><li>空串<code>&quot;&quot;</code>是合法的括号序列</li><li>如果<code>&quot;X&quot;</code>和<code>&quot;Y&quot;</code>是合法的序列,那么<code>&quot;XY&quot;</code>也是一个合法的括号序列</li><li>如果<code>&quot;X&quot;</code>是一个合法的序列,那么<code>&quot;(X)&quot;</code>也是一个合法的括号序列</li><li>每个合法的括号序列都可以由上面的规则生成</li></ol><p>例如<code>&quot;&quot;</code>,<code>&quot;()&quot;</code>, <code>&quot;()()()&quot;</code>, <code>&quot;(()())&quot;</code>, <code>&quot;(((()))&quot;</code>都是合法的。<br>从一个字符串<code>S</code>中移除零个或者多个字符得到的序列称为<code>S</code>的子序列。<br>例如<code>&quot;abcde&quot;</code>的子序列有<code>&quot;abe&quot;</code>,<code>&quot;&quot;</code>,<code>&quot;abcde&quot;</code>等。<br>定义<code>LCS(S,T)</code>为字符串<code>S</code>和字符串<code>T</code>最长公共子序列的长度,即一个最长的序列<code>W</code>既是<code>S</code>的子序列也是<code>T</code>的子序列的长度。<br>小易给出一个合法的括号匹配序列<code>S</code>,小易希望你能找出具有以下特征的括号序列t:</p><ol><li><code>T</code>跟<code>S</code>不同,但是长度相同</li><li><code>T</code>也是一个合法的括号匹配序列</li><li><code>LCS(S, T)</code>是满足上述两个条件的<code>T</code>中最大的</li></ol><p>因为这样的<code>T</code>可能存在多个,小易需要你计算出满足条件的<code>T</code>有多少个。</p><p>如样例所示: <code>S = &quot;(())()&quot;</code>,跟字符串<code>S</code>长度相同的合法括号匹配序列有:<br><code>&quot;()(())&quot;</code>, <code>&quot;((()))&quot;</code>, <code>&quot;()()()&quot;</code>, <code>&quot;(()())&quot;</code>,其中<code>LCS( &quot;(())()&quot;, &quot;()(())&quot; )</code>为<code>4</code>,其他三个都为<code>5</code>,所以输出<code>3</code>.</p><h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入包括字符串<code>S</code>(<code>4 ≤ |S| ≤ 50</code>,<code>|S|</code>表示字符串长度),保证<code>S</code>是一个合法的括号匹配序列。</p></blockquote><h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>输出一个正整数,满足条件的<code>T</code>的个数。</p></blockquote><h3 id="示例1-2"><a href="#示例1-2" class="headerlink" title="示例1"></a>示例1</h3><blockquote><p><strong>输入</strong></p><blockquote><p>(())()</p></blockquote><p><strong>输出</strong></p><blockquote><p>3</p></blockquote></blockquote><h2 id="试题分析-2"><a href="#试题分析-2" class="headerlink" title="试题分析"></a>试题分析</h2><p>很容易得出满足<code>LCS(S , T)</code>最大的<code>S</code>与<code>T</code>最长序列<code>W</code>的长度为<code>S.length - 1</code>。那么接下来的问题就很容易处理了。<br>将<code>S</code>中的任意一个字节抽离出来放到任意一个位置生成新的字符串<code>T</code>，通过合法性判断与去重，并且去除原字符串，得到的数组长度即为最终结果。</p><h2 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> strArray = [];</span><br><span class="line">    <span class="keyword">var</span> _ins = <span class="string">""</span>,</span><br><span class="line">        _other = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        _ins = str[i];</span><br><span class="line">        _other = str.substring(<span class="number">0</span>, i) + str.substring(i + <span class="number">1</span>, str.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; _other.length; j++) &#123;</span><br><span class="line">            <span class="keyword">var</span> _temp_str = _other.substring(<span class="number">0</span>, j) + _ins + _other.substring(j, _other.length);</span><br><span class="line">            <span class="keyword">if</span> (is_mate(_temp_str)) &#123;</span><br><span class="line">                strArray.push(_temp_str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr_unique(strArray).length - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arr_unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    arr.sort();</span><br><span class="line">    <span class="keyword">var</span> res = [arr[<span class="number">0</span>]];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] !== res[res.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            res.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_mate</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _arr = [],</span><br><span class="line">        _rtn = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] === <span class="string">"("</span>) &#123;</span><br><span class="line">            _arr.push(str[i])</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str[i] === <span class="string">")"</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span>(_arr.pop()) === <span class="string">"undefined"</span>) &#123;</span><br><span class="line">                _rtn = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_arr.length !== <span class="number">0</span>) &#123;</span><br><span class="line">        _rtn = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _rtn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    <span class="keyword">var</span> lines = line.split(<span class="string">" "</span>)[<span class="number">0</span>];</span><br><span class="line">    print(main(lines));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反思-2"><a href="#反思-2" class="headerlink" title="反思"></a>反思</h2><ol><li>通过数组的<code>堆栈</code>方式来判断括号字符串是否合法，主要通过出栈方法<code>array.pop()</code>方法是否为空来判断（代码37行）；</li><li>因为经过遍历去重后的数组，肯定有一个和原数组一样，所以返回最终结果时不需要再对原数组进行去重处理，直接将返回的<code>length - 1</code>即最后结果（代码37行）;</li><li>第10行的时候，犯了个低级错误，写错变量名，调试了很久才发现。。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;继续第二期，这部分的三道题变得比较复杂了。&lt;/p&gt;
&lt;h1 id=&quot;Qus4-游历魔法王国&quot;&gt;&lt;a href=&quot;#Qus4-游历魔法王国&quot; class=&quot;headerlink&quot; title=&quot;Qus4 游历魔法王国&quot;&gt;&lt;/a&gt;Qus4 游历魔法王国&lt;/h1&gt;&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="算法" scheme="https://reecode.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="牛客网" scheme="https://reecode.github.io/tags/%E7%89%9B%E5%AE%A2%E7%BD%91/"/>
    
      <category term="Javascript" scheme="https://reecode.github.io/tags/Javascript/"/>
    
      <category term="算法" scheme="https://reecode.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>网易2018校园招聘编程题真题集合（一）</title>
    <link href="https://reecode.github.io/2018/05/18/brushing0518/"/>
    <id>https://reecode.github.io/2018/05/18/brushing0518/</id>
    <published>2018-05-18T14:59:29.000Z</published>
    <updated>2018-05-24T14:34:47.184Z</updated>
    
    <content type="html"><![CDATA[<p>刷了一套据说是网易2018校园招聘编程题真题集合的题，第一次刷题，感觉挺好，希望能坚持下去。特此记录，聊以慰藉。</p><h1 id="Qus1-魔法币"><a href="#Qus1-魔法币" class="headerlink" title="Qus1 魔法币"></a>Qus1 魔法币</h1><h2 id="试题描述"><a href="#试题描述" class="headerlink" title="试题描述"></a>试题描述</h2><p>小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。<br>魔法机器1:如果投入<code>x</code>个魔法币,魔法机器会将其变为<code>2x+1</code>个魔法币<br>魔法机器2:如果投入<code>x</code>个魔法币,魔法机器会将其变为<code>2x+2</code>个魔法币<br>小易采购魔法神器总共需要<code>n</code>个魔法币,所以小易只能通过两台魔法机器产生恰好<code>n</code>个魔法币,小易需要你帮他设计一个投入方案使他最后恰好拥有<code>n</code>个魔法币。</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入包括一行,包括一个正整数<code>n(1 ≤ n ≤ 10^9)</code>,表示小易需要的魔法币数量。</p></blockquote><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符<code>&#39;1&#39;</code>和<code>&#39;2&#39;</code>。</p></blockquote><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><blockquote><p><strong>输入</strong></p><blockquote><p>10</p></blockquote><p><strong>输出</strong></p><blockquote><p>122</p></blockquote></blockquote><h2 id="试题分析"><a href="#试题分析" class="headerlink" title="试题分析"></a>试题分析</h2><p>经分析机器1只产生<code>奇数</code>，机器2只产生<code>偶数</code>，从最终结果<code>n</code>的奇偶性可以最终生产数据<code>n</code>的是那个魔法机器，从而判断是那个数生成的<code>n</code>，依次追溯到初始数字为<code>0</code>，记录过程并逆序输出即可。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">            result = result + <span class="string">"1"</span>;</span><br><span class="line">            n = <span class="built_in">Math</span>.floor((n - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = result + <span class="string">"2"</span>;</span><br><span class="line">            n = <span class="built_in">Math</span>.floor((n - <span class="number">2</span>) / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    <span class="keyword">var</span> lines = line.split(<span class="string">' '</span>);</span><br><span class="line">    print(main(lines[<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><ol><li>健壮性上没有判断输入是否为数字，实际实用可能对健壮性进行丰富；</li><li>使用<code>while循环</code>进行追溯，判断对象为标志位<code>n</code>,每次循环将n减少到上一个生成的数字；</li><li>由于字符串没有排序相关的方法，将字符串用<code>split(&quot;&quot;)</code>方法转化成数组，采用数组的<code>reverse()</code>方法进行进行逆序，最后使用数组的<code>join(&quot;&quot;)</code>方法拼接成字符串。</li></ol><h1 id="Qus2-相反数"><a href="#Qus2-相反数" class="headerlink" title="Qus2 相反数"></a>Qus2 相反数</h1><h2 id="试题描述-1"><a href="#试题描述-1" class="headerlink" title="试题描述"></a>试题描述</h2><p>为了得到一个数的<code>&quot;相反数&quot;</code>,我们将这个数的数字顺序颠倒,然后再加上原先的数得到<code>&quot;相反数&quot;</code>。例如,为了得到<code>1325</code>的<code>&quot;相反数&quot;</code>,首先我们将该数的数字顺序颠倒,我们得到<code>5231</code>,之后再加上原先的数,我们得到<code>5231+1325=6556</code>.如果颠倒之后的数字有前缀零,前缀零将会被忽略。例如<code>n = 100</code>, 颠倒之后是<code>1</code>.</p><h3 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入包括一个整数<code>n,(1 ≤ n ≤ 10^5)</code></p></blockquote><h3 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>输出一个整数,表示<code>n</code>的相反数</p></blockquote><p>###示例1</p><blockquote><p><strong>输入</strong></p><blockquote><p>1325</p></blockquote><p><strong>输出</strong></p><blockquote><p>6556</p></blockquote></blockquote><h2 id="试题分析-1"><a href="#试题分析-1" class="headerlink" title="试题分析"></a>试题分析</h2><p>本题比较简单，取反然后与原始数字相加即可，由于实用<code>Javascript</code>这种弱类型语言，所以过程中需要注意变量类型。</p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _x = <span class="built_in">String</span>(x).split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">var</span> result = <span class="built_in">parseInt</span>(x) + <span class="built_in">parseInt</span>(_x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    <span class="keyword">var</span> lines = line.split(<span class="string">' '</span>);</span><br><span class="line">    print(main(lines[<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反思-1"><a href="#反思-1" class="headerlink" title="反思"></a>反思</h2><ol><li>继续使用了第一题字符串翻转的思路，即<code>字符串-&gt;数组-&gt;倒序-&gt;拼接字符串</code>；</li><li>数字转字符串实用了<code>String()</code>方法；</li><li>字符串转数字实用了<code>parseInt()</code>方法；</li></ol><h1 id="Qus3-字符串碎片"><a href="#Qus3-字符串碎片" class="headerlink" title="Qus3 字符串碎片"></a>Qus3 字符串碎片</h1><h2 id="试题描述-2"><a href="#试题描述-2" class="headerlink" title="试题描述"></a>试题描述</h2><p>一个由小写字母组成的字符串可以看成一些同一字母的最大碎片组成的。例如,<code>&quot;aaabbaaac&quot;</code>是由下面碎片组成的:<code>&#39;aaa&#39;</code>,<code>&#39;bb&#39;</code>,<code>&#39;c&#39;</code>。牛牛现在给定一个字符串,请你帮助计算这个字符串的所有碎片的平均长度是多少。</p><h3 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述:"></a>输入描述:</h3><blockquote><p>输入包括一个字符串<code>s</code>,字符串<code>s</code>的长度<code>length(1 ≤ length ≤ 50)</code>,<code>s</code>只含小写字母<code>(&#39;a&#39;-&#39;z&#39;)</code></p></blockquote><h3 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述:"></a>输出描述:</h3><blockquote><p>输出一个整数,表示所有碎片的平均长度,四舍五入保留两位小数。</p><p>如样例所示: <code>s = &quot;aaabbaaac&quot;</code><br>所有碎片的平均长度 = (3 + 2 + 3 + 1) / 4 = 2.25</p></blockquote><h3 id="示例1-1"><a href="#示例1-1" class="headerlink" title="示例1"></a>示例1</h3><blockquote><p><strong>输入</strong></p><blockquote><p>aaabbaaac</p></blockquote><p><strong>输出</strong></p><blockquote><p>2.25</p></blockquote></blockquote><h2 id="试题分析-2"><a href="#试题分析-2" class="headerlink" title="试题分析"></a>试题分析</h2><p>此题最终计算公式需要的两个参数，被除数就是字符串<code>s</code>的<code>length</code>，而除数就是字符串<code>s</code>中包括的所有碎片的个数。即本题的关键就是计算碎片个数。<br>碎片个数采用了遍历整个字符串，使用一个临时变量记录碎片开始，与之后每个字符串字符做比对，以此判断碎片个数。</p><h2 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _fragment = <span class="number">1</span>,</span><br><span class="line">        _temp = str[<span class="number">0</span>],</span><br><span class="line">        s_length = str.length,</span><br><span class="line">        i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; s_length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (_temp !== str[i]) &#123;</span><br><span class="line">            _fragment = _fragment + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _temp = str[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (s_length / _fragment).toFixed(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;</span><br><span class="line">    <span class="keyword">var</span> lines = line.split(<span class="string">' '</span>);</span><br><span class="line">    print(main(lines[<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反思-2"><a href="#反思-2" class="headerlink" title="反思"></a>反思</h2><ol><li>关于保留两位小数，采用了<code>toFixed(2)</code>方法，四舍五入保留到取舍的位数，本来打算用<code>Math.floor(num*100)/100</code>的方法向下取整，不过对于<code>3.50</code>这种末尾数字为0的小数，无法做到强制保留两位小数；</li><li>整理代码的时候，发现题目中限制了均为小写，如果不限制的话，可能还要涉及到大小写字母的处理，即字符串的<code>toLowerCase()</code>——转换字母为小写，<code>toUpperCase()</code>——转换字母为大写；</li><li>题目中还有一个问题可能有变化，即没有对重复的片段进行判断，因为增加此功能可能将算法变得特别复杂。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刷了一套据说是网易2018校园招聘编程题真题集合的题，第一次刷题，感觉挺好，希望能坚持下去。特此记录，聊以慰藉。&lt;/p&gt;
&lt;h1 id=&quot;Qus1-魔法币&quot;&gt;&lt;a href=&quot;#Qus1-魔法币&quot; class=&quot;headerlink&quot; title=&quot;Qus1 魔法币&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="算法" scheme="https://reecode.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="牛客网" scheme="https://reecode.github.io/tags/%E7%89%9B%E5%AE%A2%E7%BD%91/"/>
    
      <category term="Javascript" scheme="https://reecode.github.io/tags/Javascript/"/>
    
      <category term="算法" scheme="https://reecode.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>牛客网Javascript V8 引擎输入输出</title>
    <link href="https://reecode.github.io/2018/05/17/brushing0517/"/>
    <id>https://reecode.github.io/2018/05/17/brushing0517/</id>
    <published>2018-05-17T14:54:40.000Z</published>
    <updated>2018-05-24T14:25:48.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h1><p>最近开始在<a href="https://www.nowcoder.com/" title="牛客网" target="_blank" rel="noopener">牛客网</a>上刷题，日渐消瘦。又有了一次次解决问题的快感。<br>虽然用来刷题可能执行效率上有些欠缺，但是最熟悉的还是Javascript，所以暂时先用<code>Javascript V8</code>引擎，之后再用<code>Nodejs</code>重写一遍。<br>往事不要再提，人生几多分雨。光是折腾输入输出都很是费力。</p><h2 id="Javascript-V8-输入"><a href="#Javascript-V8-输入" class="headerlink" title="Javascript V8 输入"></a>Javascript V8 输入</h2><p>牛客网的OJ系统<code>Javascript V8</code>引擎，采用<code>readline()</code>读取输入。为了方便，直接采用while循环，读取所有的输入。</p><h3 id="单行"><a href="#单行" class="headerlink" title="单行"></a>单行</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(line=readline())&#123;</span><br><span class="line">    <span class="keyword">var</span> lines = line.split(<span class="string">' '</span>);    <span class="comment">//同一行多个参数采用空格分割</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lines = [];</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;   </span><br><span class="line">    lines.push(line);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Javascript-V8-输出"><a href="#Javascript-V8-输出" class="headerlink" title="Javascript V8 输出"></a>Javascript V8 输出</h2><p>输出方面，可以采用<code>print()</code>方法或者<code>console.log()</code>方法进行。</p><h3 id="单行-1"><a href="#单行-1" class="headerlink" title="单行"></a>单行</h3><p>单行没什么可说的，就是直接撸结果。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//print(rusult);</span></span><br><span class="line"><span class="built_in">console</span>.log(rusult);</span><br></pre></td></tr></table></figure></p><h3 id="多行-1"><a href="#多行-1" class="headerlink" title="多行"></a>多行</h3><p>输出多行就比较坑了，试了好几种方法，提交代码后都提示输出为空，无论是循环还是其他。终于试出来如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lines = [<span class="string">"1"</span>,<span class="string">"2"</span>]</span><br><span class="line">print(main(lines).join(<span class="string">"\n"</span>));</span><br><span class="line"><span class="comment">//结果为 1 2</span></span><br></pre></td></tr></table></figure></p><p>另外这里补充一句，<code>array.join(&quot; &quot;)</code>，也可以做到与结果做到一样，但是验证无法通过。所以一定要使用这种方法。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总结一下，基本上实用<code>Javascript V8</code>引擎刷题的结构如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">argument</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//do sth……</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> lines = [];</span><br><span class="line"><span class="keyword">while</span> (line = readline()) &#123;   </span><br><span class="line">        lines.push(line);</span><br><span class="line">&#125;</span><br><span class="line">print(main(lines).join(<span class="string">"\n"</span>));</span><br></pre></td></tr></table></figure></p><p>在<code>main()</code>中写入处理函数，根据要求返回值即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在最前&quot;&gt;&lt;a href=&quot;#写在最前&quot; class=&quot;headerlink&quot; title=&quot;写在最前&quot;&gt;&lt;/a&gt;写在最前&lt;/h1&gt;&lt;p&gt;最近开始在&lt;a href=&quot;https://www.nowcoder.com/&quot; title=&quot;牛客网&quot; target=&quot;_
      
    
    </summary>
    
      <category term="算法" scheme="https://reecode.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="牛客网" scheme="https://reecode.github.io/tags/%E7%89%9B%E5%AE%A2%E7%BD%91/"/>
    
      <category term="Javascript" scheme="https://reecode.github.io/tags/Javascript/"/>
    
      <category term="算法" scheme="https://reecode.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>从零开始实现基于微信JS-SDK的录音与语音评价功能</title>
    <link href="https://reecode.github.io/2018/05/09/reecode/"/>
    <id>https://reecode.github.io/2018/05/09/reecode/</id>
    <published>2018-05-09T09:40:51.000Z</published>
    <updated>2018-06-07T16:12:53.016Z</updated>
    
    <content type="html"><![CDATA[<p>最近接受了一个新的需求，希望制作一个基于微信的英语语音评价页面。即点击录音按钮，用户录音说出预设的英文，根据用户的发音给出对应的评价。<br>以下是简单的Demo：<br><img src="/2018/05/09/reecode/qrcode.png"><br><!-- <center>![](reecode/qrcode.png)</center> --></p><p>最近接受了一个新的需求，希望制作一个基于微信的英语语音评价页面。即点击录音按钮，用户录音说出预设的英文，根据用户的发音给出对应的评价。<br>以下是示例二维码，使用微信扫一扫即可查看：</p><h1 id="功能列表"><a href="#功能列表" class="headerlink" title="功能列表"></a>功能列表</h1><ul><li><strong>☑</strong> 录音</li><li><strong>☑</strong> 录音动画</li><li><strong>☑</strong> 录音播放</li><li><strong>☑</strong> 英语语音评价（部分实现）</li><li><strong>☑</strong> 只允许微信客户端打开</li></ul><hr><h1 id="零-技术选型"><a href="#零-技术选型" class="headerlink" title="零 技术选型"></a>零 技术选型</h1><h2 id="录音方面"><a href="#录音方面" class="headerlink" title="录音方面"></a>录音方面</h2><p>可供选择的方案有两个：</p><ol><li><del>使用HTML5接口 - <code>getUserMedia()</code>；</del></li><li>微信开放平台-<code>微信JS-SDK</code>；</li></ol><img src="/2018/05/09/reecode/getUserMedia.png" title="getUserMedia() API兼容性"><!-- <center>![getUserMedia()  API兼容性](reecode/getUserMedia.png)</center> --><p>由于主要应用场景是在移动端，此API只能在<code>iOS 11+</code> 与<code>Android 5-6.X</code>及以上可用，兼容性感人，故舍弃此方案。所以此次录音实现基于微信开放平台提供的<code>微信JS-SDK</code>。</p><h2 id="英语语音识别"><a href="#英语语音识别" class="headerlink" title="英语语音识别"></a>英语语音识别</h2><p>因为主要是基于微信平台，所以要求语音识别平台需要提供Web Api。</p><p>语音识别方面功能，主要有两种技术路线。</p><ol><li>专门着力于语音识别及相关产业的技术平台，例如<code>讯飞</code>以及调研中发现的<code>驰声</code>。<br>优势：专业并且提供语音评测相关功能；<br>劣势：花费昂贵；</li><li>AI开放平台，因为各大厂商布局AI，免费提供语音识别相关的接口。<br>优势：免费，API清晰；<br>劣势：并非为专门为教育定制，无语音评测功能；</li></ol><p>结合项目的实际情况，决定使用第二种方案。（主要是因为经费有限……）</p><p>大厂提供的免费方案主要有：</p><ul><li><a href="https://cloud.baidu.com/doc/SPEECH/ASR-API.html" target="_blank" rel="noopener">百度AI</a><br>限制：50000次/天免费<br>格式支持：pcm（不压缩）、wav（不压缩，pcm编码）、amr（压缩格式）；固定16k 采样率；</li><li><del><a href="https://cloud.tencent.com/document/product/441" target="_blank" rel="noopener">腾讯AI开发平台</a></del><br>语音参数：必须符合16k或8K采样率、16bit采样位数、单声道<br>语音格式：PCM、WAV、AMR、 SILK<br>其他：目前只支持<strong>汉语</strong></li><li><del><a href="https://cloud.tencent.com/document/product/441/6204" target="_blank" rel="noopener">腾讯云智能语音服务</a></del><br>语音参数：必须符合16k或8K采样率、16bit采样位数、单声道<br>语音格式：通用标准格式，例如 mp3，wma，wav 等</li><li><del><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=21516712282KzWVE" target="_blank" rel="noopener">微信公众平台AI开放接口</a></del><br>语音参数：16k，单声道，最大1M<br>语音格式：mp3</li><li><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noopener">微信公众平台JS-SDK智能接口</a><br>其他：目前只支持<strong>汉语</strong></li></ul><p><del>大厂竞争果然系列，大鹅厂光语音服务肉眼可见的就折腾了这么多。（大雾）</del></p><p>经过一番折腾，最终可以形成两种方案：</p><ol><li><p><code>微信JS-SDK音频接口录音</code>-&gt;<code>上传到微信临时素材</code>-&gt;<code>下载到服务器</code>-&gt;<code>转换录音文件格式</code>-&gt;<code>百度AI语音识别返回结果</code>-&gt;<code>与预置的文件比对</code>-&gt;<code>返回比对结果</code><br>优势：识别结果准<br>劣势：慢（因为无法直接获取用户的录音，需要从微信公众平台的<code>临时素材</code>中转，且录音文件格式与百度AI可识别格式不一致，所以整个流程下来太慢）；微信公众号需要<code>企业认证</code><br>其他：至于为什么不选用腾讯系列，因为<del>腾讯系列语音服务没有调通</del>。。。</p></li><li><p><code>微信JS-SDK音频接口录音</code>-&gt;<code>调用JS-SDK智能接口返回识别结果</code>-&gt;<code>结果转为拼音</code>-&gt;<code>与预置的文件比对</code>-&gt;<code>返回比对结果</code><br>优势：返回结果迅速、方法简单<br>劣势：识别结果不太准确（因为<code>JS-SDK智能接口</code>不只是单单根据语音直接转换，还会在结果的基础上进行一定程度的联想，话说为啥不能增加个语言选择参数。）</p></li></ol><p>本次整个方案使用<strong>方案2</strong>。</p><hr><h1 id="一-微信JS-SDK环境准备"><a href="#一-微信JS-SDK环境准备" class="headerlink" title="一 微信JS-SDK环境准备"></a>一 微信JS-SDK环境准备</h1><p>写在前边：此处的开发环境不是指本地的开发环境，单指使用<code>微信JS-SDK</code>所需完成的一系列的获取<code>AccessToken</code>、<code>jsapi_ticket</code>等前置条件。</p><p><strong>开发环境</strong><br>云服务器：腾讯云 · 小程序（特价，买了个折腾）<br>后台语音：PHP · CodeIgniter（小程序PHP样例使用CI框架）</p><h2 id="1）公众号配置"><a href="#1）公众号配置" class="headerlink" title="1）公众号配置"></a>1）公众号配置</h2><p>前置的公众号申请等就不再赘述，如果要正常使用<code>微信JS-SDK</code>的功能，需要在公众号配置一些内容。</p><h3 id="配置IP白名单"><a href="#配置IP白名单" class="headerlink" title="配置IP白名单"></a>配置IP白名单</h3><p>通过微信公众平台 <strong>开发</strong> -&gt; <strong>基本配置</strong> -&gt; <strong>IP白名单</strong> 进行设置，将开发环境的IP配置到IP白名单。</p><p>注1. 如果不配置白名单将无法获取<code>access_token</code>，并在返回结果中返回<code>40164</code>错误；</p><p>注2. 因为是在<code>腾讯云 · 小程序</code>主机<code>开发环境</code>下折腾的，该环境如果一周不更新新的代码会暂时关闭，IP也会发生变化，所以建议每周更新一下代码；</p><h3 id="配置JS接口安全域名"><a href="#配置JS接口安全域名" class="headerlink" title="配置JS接口安全域名"></a>配置JS接口安全域名</h3><p>通过微信公众平台 <strong>设置</strong> -&gt; <strong>公众号设置</strong> -&gt; <strong>功能设置</strong> -&gt; <strong>JS接口安全域名</strong> 进行设置，将JS接口安全域名写入。</p><p>注1. 一个公众号最多可以配置3个安全域名，需使用字母、数字及“-”的组合，不支持IP地址、端口号及短链域名，且域名必须经过备案；</p><p>注2. 需要将<code>MP_verify_qEwAJiPuWerKftkO.txt</code>（可在配置JS接口安全域名处自行下载）放到配置域名的根目录,并确保可以访问到。<code>腾讯云 · 小程序</code>默认样例使用的CI框架，需要放到<code>\server</code>下；</p><p>注3. 如不配置JS接口安全域名，则无法成功调用JS-SDK；</p><h2 id="2）获取access-token"><a href="#2）获取access-token" class="headerlink" title="2）获取access_token"></a>2）获取access_token</h2><p><code>access_token</code>是公众号的全局唯一接口调用凭据，调用公众号的各个接口时都需要使用。获取<code>access_token</code>需要<code>appid</code>与<code>appsecret</code>。微信公众平台的<code>access_token</code>有效期为<code>7200s (2小时)</code>，每天最高可调用上限为2000次。因此获取<code>access_token</code>需要做到：</p><ol><li>定时刷新（刷新间隔大于1分钟，小于120分）；</li><li>全局缓存<code>access_token</code>；</li></ol><h3 id="Show-me-the-code"><a href="#Show-me-the-code" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">className</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $appId = <span class="string">"appId"</span>;</span><br><span class="line">  <span class="keyword">var</span> $appSecret = <span class="string">"appSecret"</span>;</span><br><span class="line">  <span class="keyword">var</span> $accessTokenFile = <span class="string">"wxtoken.txt"</span>;</span><br><span class="line">  <span class="comment">// var $jsapiTicketFile = "wxjsapiTicket.txt";</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span> - &gt; build_access_token(); <span class="comment">//获取access_token</span></span><br><span class="line">    <span class="comment">// $this - &gt; get_jsapi_ticket(); //获取jsapic_ticket</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">build_access_token</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $ch = curl_init(); <span class="comment">//初始化一个CURL对象</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;$this-&gt;appId&#125;&amp;secret=&#123;$this-&gt;appSecret&#125;"</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">    $data = json_decode(curl_exec($ch));</span><br><span class="line">    <span class="keyword">if</span> ($data - &gt; access_token) &#123;</span><br><span class="line">      $token_file = fopen(<span class="keyword">$this</span> - &gt; accessTokenFile, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>); <span class="comment">//打开wxtoken.txt文件，没有会新建</span></span><br><span class="line">      fwrite($token_file, $data - &gt; access_token); <span class="comment">//重写wxtken.txt全部内容</span></span><br><span class="line">      fclose($token_file); <span class="comment">//关闭文件流</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> $data - &gt; errmsg;</span><br><span class="line">    &#125;</span><br><span class="line">    curl_close($ch);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_token</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $token_file = fopen(<span class="keyword">$this</span> - &gt; accessTokenFile, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">    $rs = fgets($token_file);</span><br><span class="line">    fclose($token_file);</span><br><span class="line">    <span class="keyword">return</span> $rs;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>因为使用的是CI框架，将文件写到<code>server\application\controllers\</code>下可直接通过<code>域名+文件名</code>访问到该接口，默认执行文件中的<code>index</code>中的方法；</li><li>代码中的基本逻辑通过<code>build_access_token()</code>方法获取<code>access_token</code>，并存储到<code>wxtken.txt</code>，通过<code>read_token()</code>方法读取<code>access_token</code>；</li></ol><p>获取access_token的详细情况见<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183" target="_blank" rel="noopener">官方API</a>。</p><h2 id="3）获取jsapi-ticket"><a href="#3）获取jsapi-ticket" class="headerlink" title="3）获取jsapi_ticket"></a>3）获取jsapi_ticket</h2><p><code>jsapi_ticket</code>是公众号用于调用微信JS接口的临时票据，通过access_token来获取。微信公众平台的<code>jsapi_ticket</code>有效期为<code>7200s (2小时)</code>，每天最高可调用上限为1000000次。因此同样在全局缓存。</p><h3 id="Show-me-the-code-1"><a href="#Show-me-the-code-1" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_jsapi_ticket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  $access_token = <span class="keyword">$this</span> - &gt; read_token();</span><br><span class="line">  $ch = curl_init(); <span class="comment">//初始化一个CURL对象</span></span><br><span class="line">  curl_setopt($ch, CURLOPT_URL, <span class="string">"https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=&#123;$access_token&#125;&amp;type=jsapi"</span>); </span><br><span class="line">  curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">  $data = json_decode(curl_exec($ch));</span><br><span class="line">  <span class="keyword">if</span> ($data - &gt; ticket) &#123;</span><br><span class="line">    $token_file = fopen(<span class="keyword">$this</span> - &gt; jsapiTicketFile, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">    fwrite($token_file, $data - &gt; ticket);</span><br><span class="line">    fclose($token_file); <span class="comment">//关闭文件流</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> $data - &gt; errmsg;</span><br><span class="line">  &#125;</span><br><span class="line">  curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_jsapi_ticket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  $jsapi_ticket_file = fopen(<span class="keyword">$this</span> - &gt; jsapiTicketFile, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">  $rs = fgets($jsapi_ticket_file);</span><br><span class="line">  fclose($jsapi_ticket_file);</span><br><span class="line">  <span class="keyword">return</span> $rs;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-1"><a href="#Talk-is-cheap-1" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>写到跟获取<code>access_token</code>同一文件中，以便同时刷新；</li><li>同之前的代码中逻辑类似，通过<code>get_jsapi_ticket()</code>方法获取<code>jsapi_ticket</code>，并存储到<code>wxjsapiTicket.txt</code>，通过<code>read_jsapi_ticket()</code>方法读取<code>jsapi_ticket</code>；</li></ol><p>获取access_token的详细情况见<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183" target="_blank" rel="noopener">官方API</a>。</p><h2 id="4）刷新access-token及jsapi-ticket"><a href="#4）刷新access-token及jsapi-ticket" class="headerlink" title="4）刷新access_token及jsapi_ticket"></a>4）刷新access_token及jsapi_ticket</h2><p>由于微信公众平台的<code>access_token</code>与<code>jsapi_ticket</code>有两个小时有效期，故需要定期刷新。基本思路有如下三个：</p><ol><li><del>PHP定时执行任务；</del></li><li><del>服务器定时任务；</del></li><li>定时访问URL；</li></ol><h3 id="1-PHP定时执行任务"><a href="#1-PHP定时执行任务" class="headerlink" title="1.PHP定时执行任务"></a>1.PHP定时执行任务</h3><p>主要使用死循环，执行一次时间，使用<code>sleep()</code>函数休眠一段时间，如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ignore_user_abort();<span class="comment">//即使Client断开(如关掉浏览器)，PHP脚本也可以继续执行.</span></span><br><span class="line">set_time_limit(<span class="number">0</span>);<span class="comment">//执行时间为无限制，php默认的执行时间是30秒，通过set_time_limit(0)可以让程序无限制的执行下去</span></span><br><span class="line">$interval=<span class="number">60</span>*<span class="number">100</span>;<span class="comment">//每隔100分钟运行</span></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">//do sth</span></span><br><span class="line">    sleep($interval);<span class="comment">//按设置的时间等待100分钟循环执行</span></span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><p>缺点：缺点严重，启动之后，无法控制。而且一直消耗服务器资源，容易被杀死；</p><h3 id="2-服务器定时任务"><a href="#2-服务器定时任务" class="headerlink" title="2.服务器定时任务"></a>2.服务器定时任务</h3><p>windows平台的计划任务或者是Unix平台的<code>Crontab</code>都有定时执行php脚本或者访问URL的方法，但是由于使用的<code>腾讯云 · 小程序</code>使用的是<code>Wafer</code>一体化解决方案，无法直接访问远端服务器，故此方法放弃。</p><h3 id="3-定时访问URL"><a href="#3-定时访问URL" class="headerlink" title="3. 定时访问URL"></a>3. 定时访问URL</h3><p>我们这次定时刷新<code>access_token</code>及<code>jsapi_ticket</code>采用的就是此方法，<code>腾讯云平台</code>，有个免费的功能<code>云拨测</code>可定时访问某个URL，并且在无法访问时，将预警信息发送给某个设定好的用户组。<br>将我们之前写好的获取<code>access_token</code>及<code>jsapi_ticket</code>方法，写到index()方法下，将URL填到拨测地址中，定时刷新，搞定。</p><p>注1. 云拨测最长的周期为半个小时，而且每次拨测可能访问地址5-6次，其实更稳妥的方法是在数据库中设置标志位，防治过度刷新，但是每天2000次的限额完全够用，就暂时未做此功能。</p><h2 id="5）生成JS-SDK配置信息"><a href="#5）生成JS-SDK配置信息" class="headerlink" title="5）生成JS-SDK配置信息"></a>5）生成JS-SDK配置信息</h2><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用，配置信息需要的参数如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.config(&#123;</span><br><span class="line">    debug: <span class="literal">true</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">    appId: <span class="string">''</span>, <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">    timestamp: , <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">    signature: <span class="string">''</span>,<span class="comment">// 必填，签名</span></span><br><span class="line">    jsApiList: [] <span class="comment">// 必填，需要使用的JS接口列表</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其中的<code>appId</code>、<code>jsApiList</code>已知，<code>timestamp</code>、<code>nonceStr</code>动态生成，<code>signature</code>由算法生产。其中关于<code>signature</code>的算法官方API描述如下：</p><blockquote><p><strong>签名算法</strong></p><p>签名生成规则如下：参与签名的字段包括noncestr（随机字符串）, 有效的jsapi_ticket, timestamp（时间戳）, url（当前网页的URL，不包含#及其后面部分） 。对所有待签名参数按照字段名的ASCII 码从小到大排序（字典序）后，使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串string1。这里需要注意的是所有参数名均为小写字符。对string1作sha1加密，字段名和字段值都采用原始值，不进行URL 转义。</p><p>即signature=sha1(string1)。 示例：</p><blockquote><p>noncestr=Wm3WZYTPz0wzccnW<br>jsapi_ticket=sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg<br>timestamp=1414587457<br>url=<a href="http://mp.weixin.qq.com?params=value" target="_blank" rel="noopener">http://mp.weixin.qq.com?params=value</a></p></blockquote><p>步骤1. 对所有待签名参数按照字段名的ASCII 码从小到大排序（字典序）后，使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串string1：</p><blockquote><p>jsapi_ticket=sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg&amp;noncestr=Wm3WZYTPz0wzccnW×tamp=1414587457&amp;url=<a href="http://mp.weixin.qq.com?params=value" target="_blank" rel="noopener">http://mp.weixin.qq.com?params=value</a></p></blockquote><p>步骤2. 对string1进行sha1签名，得到signature：</p><blockquote><p>0f9de62fce790f9a083d5c99e95740ceb90c27ed</p></blockquote><p><strong>注意事项</strong></p><blockquote><ol><li>签名用的noncestr和timestamp必须与wx.config中的nonceStr和timestamp相同。</li><li>签名用的url必须是调用JS接口页面的完整URL。</li><li>出于安全考虑，开发者必须在服务器端实现签名的逻辑。</li></ol></blockquote></blockquote><h3 id="Show-me-the-code-2"><a href="#Show-me-the-code-2" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_signpackage</span><span class="params">()</span></span>&#123;</span><br><span class="line">  $jsapi_ticket = <span class="keyword">$this</span>-&gt;read_jsapi_ticket();  </span><br><span class="line">  $protocol = (!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTPS'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTPS'</span>] !== <span class="string">'off'</span> || $_SERVER[<span class="string">'SERVER_PORT'</span>] == <span class="number">443</span>) ? <span class="string">"https://"</span> : <span class="string">"http://"</span>;</span><br><span class="line">  $url = <span class="string">"$protocol$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]"</span>;  <span class="comment">// 注意 URL 一定要动态获取，不能 hardcode.</span></span><br><span class="line">  $noncestr = <span class="keyword">$this</span>-&gt;createNonceStr();</span><br><span class="line">  $timestamp = time();</span><br><span class="line"></span><br><span class="line">  $trs_url = <span class="keyword">$this</span>-&gt;input-&gt;post(<span class="string">'trs_url'</span>);</span><br><span class="line"></span><br><span class="line">  $url = <span class="keyword">isset</span>($trs_url)?$trs_url:$url;</span><br><span class="line">  $string1 = <span class="string">"jsapi_ticket=&#123;$jsapi_ticket&#125;&amp;noncestr=&#123;$noncestr&#125;&amp;timestamp=&#123;$timestamp&#125;&amp;url=&#123;$url&#125;"</span>;</span><br><span class="line">  $signature = sha1($string1);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">$this</span>-&gt;json([</span><br><span class="line">    <span class="string">'appId'</span>     =&gt; <span class="keyword">$this</span>-&gt;appId,</span><br><span class="line">    <span class="string">'nonceStr'</span>  =&gt; $noncestr,</span><br><span class="line">    <span class="string">'timestamp'</span> =&gt; $timestamp,</span><br><span class="line">    <span class="string">'signature'</span> =&gt; $signature,</span><br><span class="line">    <span class="string">'url'</span> =&gt; $url</span><br><span class="line">  ]);</span><br><span class="line">  <span class="comment">// return $signPackage;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">createNonceStr</span><span class="params">($length = <span class="number">16</span>)</span> </span>&#123;</span><br><span class="line">  $chars = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;</span><br><span class="line">  $str = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">    $str .= substr($chars, mt_rand(<span class="number">0</span>, strlen($chars) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-2"><a href="#Talk-is-cheap-2" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>一定要注意，<strong>签名用的url必须是调用JS接口页面的完整URL</strong>，这里通过前端POST获取调用页的URL；</li><li>返回值为json格式，前端通过ajax获取；</li><li>因为采用了CI框架，前端ajax请求地址为<code>域名</code>/<code>weapp</code>/<code>此段代码的文件名</code>/<code>get_signpackage</code>。</li></ol><p>微信JS-SDK说明见<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noopener">官方API</a>。</p><p>至此，使用微信公众平台JS-SDK的前置条件均已准备完毕。</p><hr><h1 id="二-实现录音按钮动画"><a href="#二-实现录音按钮动画" class="headerlink" title="二 实现录音按钮动画"></a>二 实现录音按钮动画</h1><p>基本的交互逻辑如下图演示：<br><img src="/2018/05/09/reecode/show.gif"><br><!-- <center>![](reecode/show.gif)</center> --></p><p>此处来实现长按录音按钮的动画。基本思路是：</p><ol><li>通过CSS3的<code>transition</code>属性实现record突变的平滑变小、平滑变大；</li><li>通过CSS3的<code>keyframes</code>动画与伪类配合完成环形进度动画；</li></ol><h2 id="Show-me-the-code-3"><a href="#Show-me-the-code-3" class="headerlink" title="Show me the code"></a>Show me the code</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dialogBox"</span> <span class="attr">id</span>=<span class="string">"dialogBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"voice-remote"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote &#123;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    width: 4rem;</span></span><br><span class="line"><span class="undefined">    height: 4rem;</span></span><br><span class="line"><span class="undefined">    overflow: hidden;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    background: #f6f6f6;</span></span><br><span class="line"><span class="undefined">    bottom: 1.5rem;</span></span><br><span class="line"><span class="undefined">    left: 50%;</span></span><br><span class="line"><span class="undefined">    -webkit-transform: translateX(-50%);</span></span><br><span class="line"><span class="undefined">    transform: translateX(-50%);</span></span><br><span class="line"><span class="undefined">    transition: all .2s;</span></span><br><span class="line"><span class="undefined">    -webkit-transition: all .2s;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:active &#123;</span></span><br><span class="line"><span class="undefined">    width: 4.5rem;</span></span><br><span class="line"><span class="undefined">    height: 4.5rem;</span></span><br><span class="line"><span class="undefined">    bottom: 1rem;</span></span><br><span class="line"><span class="undefined">    border: 1px solid #e7e7e7;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:before &#123;</span></span><br><span class="line"><span class="undefined">    content: "";</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 100%;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    z-index: 2;</span></span><br><span class="line"><span class="undefined">    top: 0;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    background-image: linear-gradient(-90deg, transparent 50%, #1dc61c 50%);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:after &#123;</span></span><br><span class="line"><span class="undefined">    content: "";</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 100%;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    z-index: 3;</span></span><br><span class="line"><span class="undefined">    bottom: 0;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    background-image: linear-gradient(-90deg, transparent 50%, #1dc61c 50%);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote .cover &#123;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 100%;</span></span><br><span class="line"><span class="undefined">    z-index: 4;</span></span><br><span class="line"><span class="undefined">    top: 0;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    background-image: linear-gradient(-90deg, transparent 50%, #f6f6f6 50%);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote .icon &#123;</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    height: 100%;</span></span><br><span class="line"><span class="undefined">    top: 0;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    background: #f6f6f6 url(../../images/voice.png) no-repeat center center;</span></span><br><span class="line"><span class="undefined">    background-size: 100%;</span></span><br><span class="line"><span class="undefined">    border-radius: 50%;</span></span><br><span class="line"><span class="undefined">    z-index: 5;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote .icon:active &#123;</span></span><br><span class="line"><span class="undefined">    width: 80%;</span></span><br><span class="line"><span class="undefined">    height: 80%;</span></span><br><span class="line"><span class="undefined">    top: 10%;</span></span><br><span class="line"><span class="undefined">    left: 10%;</span></span><br><span class="line"><span class="undefined">    background-size: 100%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:active:before &#123;</span></span><br><span class="line"><span class="undefined">    -webkit-animation: scoll linear 30s;</span></span><br><span class="line"><span class="undefined">    animation: scoll linear 30s;</span></span><br><span class="line"><span class="undefined">    -webkit-animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">    animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:active:after &#123;</span></span><br><span class="line"><span class="undefined">    -webkit-animation: xscoll linear 60s;</span></span><br><span class="line"><span class="undefined">    animation: xscoll linear 60s;</span></span><br><span class="line"><span class="undefined">    -webkit-animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">    animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.voice-remote:active .cover &#123;</span></span><br><span class="line"><span class="undefined">    -webkit-animation: hide linear 60s;</span></span><br><span class="line"><span class="undefined">    animation: hide linear 60s;</span></span><br><span class="line"><span class="undefined">    -webkit-animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">    animation-fill-mode: forwards;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@-webkit-keyframes scoll &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        -webkit-transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        -webkit-transform: rotate(180deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@keyframes scoll &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        transform: rotate(180deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@-webkit-keyframes xscoll &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        -webkit-transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        -webkit-transform: rotate(360deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@keyframes xscoll &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        transform: rotate(0deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        transform: rotate(360deg);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@-webkit-keyframes hide &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 1</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    49.9% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    50% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@keyframes hide &#123;</span></span><br><span class="line"><span class="undefined">    0% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 1</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    49.9% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    50% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    100% &#123;</span></span><br><span class="line"><span class="undefined">        opacity: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Talk-is-cheap-3"><a href="#Talk-is-cheap-3" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><img src="/2018/05/09/reecode/animate-pages.png" title="录音按钮原理图"><!-- <center>![录音按钮原理图](reecode/animate-pages.png)</center> --><p>录音按钮动画原理如上图分层，其中<code>:before</code>层添加动画为旋转180度，时间为30s，与此同时<code>:after</code>层添加动画为旋转360度，时间为60s，即前30s两个图层同时旋转，当30s后<code>:after</code>层继续旋转，<code>:before</code>层保持位置不变，使整个右侧环形显示。<code>.cover</code>层添加动画为前30s覆盖整个左侧，后30s隐藏。 整个动画由最顶部<code>.icon</code>覆盖，使整个动画过程显示为一个环形。</p><hr><h1 id="三-实现录音及录音播放功能"><a href="#三-实现录音及录音播放功能" class="headerlink" title="三 实现录音及录音播放功能"></a>三 实现录音及录音播放功能</h1><p>开始是实现录音及播放的相关功能。主要流程是<code>引入JS文件</code>、<code>通过config接口注入权限验证配置</code>、<code>通过ready接口处理成功验证</code>、<code>撰写录音代码逻辑</code>、<code>撰写录音播放代码逻辑</code>。</p><h2 id="1）引入JS文件"><a href="#1）引入JS文件" class="headerlink" title="1）引入JS文件"></a>1）引入JS文件</h2><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.2.0.js" target="_blank" rel="noopener">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a></p><h3 id="Show-me-the-code-4"><a href="#Show-me-the-code-4" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">    baseUrl: <span class="string">'./lib/js'</span>,</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">'jquery'</span>: <span class="string">'jquery'</span>,</span><br><span class="line">        <span class="string">'jweixin'</span>: <span class="string">'jweixin'</span>,</span><br><span class="line">        <span class="string">'util'</span>: <span class="string">'util'</span>,</span><br><span class="line">        <span class="string">'post_data'</span>: <span class="string">'data'</span>,</span><br><span class="line">        <span class="string">'pinyin_dict_notone'</span>: <span class="string">'pinyin_dict_notone'</span>,</span><br><span class="line">        <span class="string">'pinyinUtil'</span>: <span class="string">'pinyinUtil'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">define([<span class="string">'jquery'</span>, <span class="string">'jweixin'</span>, <span class="string">'post_data'</span>, <span class="string">'util'</span>, <span class="string">'pinyin_dict_notone'</span>, <span class="string">'pinyinUtil'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$, wx</span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-4"><a href="#Talk-is-cheap-4" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>此次使用AMD模式<code>requirejs</code>引入相关文件；</li><li>这里引入多个文件，之后的代码需要使用；</li></ol><p>注1. 支持使用 AMD/CMD 标准模块加载方法加载，也支持直接使用<script></script>直接引用；<br>注2. 调用之前需要完成<code>配置JS接口安全域名</code>。</p><h2 id="2）通过config接口注入权限验证配置"><a href="#2）通过config接口注入权限验证配置" class="headerlink" title="2）通过config接口注入权限验证配置"></a>2）通过config接口注入权限验证配置</h2><p>通过ajax请求之前完成的<code>生成JS-SDK配置信息</code>接口，获取到相关的配置内容，另外<code>jsApiList</code>接口列表需要根据业务需求自行添加。</p><h3 id="Show-me-the-code-5"><a href="#Show-me-the-code-5" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">"your js-sdk interface"</span>,</span><br><span class="line">    dataType: <span class="string">"json"</span>,</span><br><span class="line">    contentType : <span class="string">"application/x-www-form-urlencoded; charset=utf-8"</span>,</span><br><span class="line">    data:&#123;<span class="string">"trs_url"</span>:<span class="built_in">window</span>.location.href.split(<span class="string">"#"</span>)[<span class="number">0</span>]&#125;,</span><br><span class="line">    type:<span class="string">"POST"</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> baseWxData = data;</span><br><span class="line">        wx.config(&#123;</span><br><span class="line">            debug: <span class="literal">false</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">            appId: baseWxData[<span class="string">'appId'</span>], <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">            timestamp: baseWxData[<span class="string">'timestamp'</span>], <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">            nonceStr: baseWxData[<span class="string">'nonceStr'</span>], <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">            signature: baseWxData[<span class="string">'signature'</span>], <span class="comment">// 必填，签名，见附录1</span></span><br><span class="line">            jsApiList: [</span><br><span class="line">                <span class="string">'startRecord'</span>, <span class="comment">// 录音开始api</span></span><br><span class="line">                <span class="string">'stopRecord'</span>, <span class="comment">// 录音结束api</span></span><br><span class="line">                <span class="string">'onVoiceRecordEnd'</span>, <span class="comment">// 超过一分钟自动停止api</span></span><br><span class="line">                <span class="string">'playVoice'</span>, <span class="comment">// 播放录音api</span></span><br><span class="line">                <span class="string">'pauseVoice'</span>, <span class="comment">// 暂停录音api</span></span><br><span class="line">                <span class="string">'stopVoice'</span>,    <span class="comment">// 停止播放api</span></span><br><span class="line">                <span class="string">'onVoicePlayEnd'</span>, <span class="comment">// 监听语音播放完毕api</span></span><br><span class="line">                <span class="string">'translateVoice'</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-5"><a href="#Talk-is-cheap-5" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>用<code>post</code>传入当前页面URL，因为签名算法必须是使用<strong>调用页</strong>的地址；</li><li>此次功能只用到如代码中的几个API，更多API详见<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noopener">官方API</a>；</li></ol><h2 id="3）通过ready接口处理成功验证"><a href="#3）通过ready接口处理成功验证" class="headerlink" title="3）通过ready接口处理成功验证"></a>3）通过ready接口处理成功验证</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4）撰写录音代码逻辑"><a href="#4）撰写录音代码逻辑" class="headerlink" title="4）撰写录音代码逻辑"></a>4）撰写录音代码逻辑</h2><p>创建一个对象R，封装录音、播放以及翻译等过程。监听录音按钮的<code>touchstart</code>事件启动录音，监听<code>touchend</code>时间结束录音。</p><h3 id="Show-me-the-code-6"><a href="#Show-me-the-code-6" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Javascript Code*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> R = &#123;</span><br><span class="line">    options: &#123;</span><br><span class="line">        spoint: <span class="number">0</span>,  <span class="comment">//记录recordstart时间</span></span><br><span class="line">        tpoint: <span class="number">0</span>,  <span class="comment">//记录touchstart时间</span></span><br><span class="line">        epoint: <span class="number">0</span>,  <span class="comment">//记录touchend时间</span></span><br><span class="line">        timer: <span class="number">0</span>,   <span class="comment">//setInterval</span></span><br><span class="line">        iOrder: <span class="number">0</span>   <span class="comment">//记录录音序列order</span></span><br><span class="line">    &#125;,</span><br><span class="line">    feedback: &#123;</span><br><span class="line">        great: [<span class="string">"Excellent!"</span>, <span class="string">"Well done!"</span>, <span class="string">"口语不错嘛！"</span>, <span class="string">"非常棒！"</span>, <span class="string">"Great"</span>],</span><br><span class="line">        good: [<span class="string">"Good job!"</span>, <span class="string">"Not bad!"</span>, <span class="string">"还不错哦！"</span>, <span class="string">"Good! Keep going!"</span>, <span class="string">"干得不错！加油"</span>],</span><br><span class="line">        normal: [<span class="string">"Please try again!"</span>, <span class="string">"Oh,you can do better than that!"</span>, <span class="string">"分数有点儿低哦！"</span>, <span class="string">"再来一次试试！"</span>, <span class="string">"Have another try,please!"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    recode: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//定时最长60s后结束录音</span></span><br><span class="line">        R.options.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> time = +<span class="keyword">new</span> <span class="built_in">Date</span>() - R.options.spoint;</span><br><span class="line">            <span class="keyword">if</span> (time &gt;= <span class="number">60000</span>) &#123;</span><br><span class="line">                alert(<span class="string">"时间超过60秒，请再次录制！"</span>);</span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    R.translate();</span><br><span class="line">                &#125;, <span class="number">100</span>);</span><br><span class="line">                clearInterval(R.options.timer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    translate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//结束录音并识别语音</span></span><br><span class="line">        wx.stopRecord(&#123;</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">                localId = res.localId;</span><br><span class="line">                $(<span class="string">".voice-remote"</span>).addClass(<span class="string">"vrPause"</span>);</span><br><span class="line"></span><br><span class="line">                wx.translateVoice(&#123;</span><br><span class="line">                    localId: localId,</span><br><span class="line">                    complete: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;&#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">                alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    insertContent: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (obj.iType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                _str = <span class="string">'&lt;div class="p1 dialogItem"&gt;&lt;div class="avatarBox"&gt;&lt;img src="./images/avatar1.png" class="avatar" /&gt;&lt;/div&gt;&lt;div class="contentBox"&gt;&lt;div class="wordBox"&gt;&lt;span&gt;'</span> + obj.iContent + <span class="string">'&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                _str = <span class="string">'&lt;div class="p2 dialogItem isSound '</span> + obj.iClass + <span class="string">'"&gt;&lt;div class="contentBox iPlayVoice" data-localid="'</span> + obj.iContent + <span class="string">'"&gt;&lt;div class="wordBox"&gt;&lt;span&gt;&lt;i class="sound"&gt;&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="avatarBox"&gt;&lt;img src="./images/avatar2.png"  class="avatar" /&gt;&lt;/div&gt;'</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Undefined element of iType :'</span> + iType);</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">"#dialogBox"</span>).append(_str).scrollTop($(<span class="string">"#dialogBox"</span>)[<span class="number">0</span>].scrollHeight);</span><br><span class="line">    &#125;,</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        R.insertContent(&#123;</span><br><span class="line">            iType: <span class="number">1</span>,</span><br><span class="line">            iContent: word.keyword[R.options.iOrder].content,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// $.ajax();</span></span><br><span class="line"></span><br><span class="line">        wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">'.voice-remote'</span>).on(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                $(<span class="string">".playing"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    _stoplocalId = $(<span class="keyword">this</span>).data(<span class="string">"localid"</span>);</span><br><span class="line">                    $(<span class="keyword">this</span>).removeClass(<span class="string">"playing"</span>);</span><br><span class="line">                    wx.stopVoice(&#123;</span><br><span class="line">                        localId: _stoplocalId</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                R.options.tpoint = +<span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//记录touchstart时间点</span></span><br><span class="line"></span><br><span class="line">                wx.startRecord(&#123;</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">'.voice-remote'</span>).addClass(<span class="string">'active'</span>);</span><br><span class="line">                        R.options.spoint = +<span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//记录开始录音成功时间点</span></span><br><span class="line">                        R.recode(); <span class="comment">//启用定时结束录音定时器</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (R.options.spoint &gt; R.options.epoint &amp;&amp; R.options.epoint &gt; R.options.tpoint) &#123; <span class="comment">//处理因为短按，startRecord还未初始成功，导致无法正常停止录音</span></span><br><span class="line">                            clearInterval(R.options.timer);</span><br><span class="line"></span><br><span class="line">                            $(<span class="string">'.voice-remote'</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">                        alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">                    &#125;,</span><br><span class="line">                    cancel: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        alert(<span class="string">'您拒绝了授权录音'</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">document</span>.oncontextmenu = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 阻止部分手机长按会产生弹出框的问题</span></span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            $(<span class="string">'.voice-remote'</span>).on(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                R.options.epoint = +<span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//记录touchend时间点</span></span><br><span class="line">                $(<span class="keyword">this</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> time = +<span class="keyword">new</span> <span class="built_in">Date</span>() - R.options.spoint;</span><br><span class="line">                <span class="keyword">if</span> (time &lt; <span class="number">60000</span>) &#123; <span class="comment">//当录音间隔时间小于60s，touchend后清除定时结束录音定时器，并调用结束录音方法</span></span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        R.translate();</span><br><span class="line">                    &#125;, <span class="number">200</span>);</span><br><span class="line">                    clearInterval(R.options.timer);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            $(<span class="built_in">document</span>).on(<span class="string">'touchstart'</span>, <span class="string">'.iPlayVoice'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// do sth</span></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            wx.onVoicePlayEnd(&#123;</span><br><span class="line">                complete: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">                    <span class="comment">// do sth</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">R.init();</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS Code*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.setHide</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ebebeb</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">font-family</span>: Microsoft YaHei;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dialogBox</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">94%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">81%</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dialogItem</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3%</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avatarBox</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentBox</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">68%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wordBox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../../images/sharpOther.png) <span class="number">0</span> <span class="number">0</span> no-repeat;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d4d4d4</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wordBox</span>&gt;<span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5em</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: justify;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sharpStyle</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../../images/sharpOther.png) <span class="number">0</span> <span class="number">0</span> no-repeat;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sharpMe</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../../images/sharpMe.png);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sound</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../../images/sound.png) <span class="number">0</span> <span class="number">0</span> no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.playing</span> <span class="selector-class">.sound</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../../images/sound.gif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> <span class="selector-class">.contentBox</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#86b850</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#a1e75b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> <span class="selector-class">.wordBox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../../images/sharpMe.png) <span class="number">0</span> <span class="number">0</span> no-repeat;</span><br><span class="line">    <span class="attribute">left</span>: auto;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> <span class="selector-class">.sound</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../../images/soundMe.png);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> <span class="selector-class">.playing</span> <span class="selector-class">.sound</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../../images/soundMe.gif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dialogItem</span> <span class="selector-class">.contentBox</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#969696</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dialogItem</span> <span class="selector-class">.contentBox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#969696</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.isSound</span> <span class="selector-class">.contentBox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">68%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span><span class="selector-class">.isSound</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundOt1</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundOt2</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*……*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundOt1</span>  <span class="selector-class">.contentBox</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"1 ''"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundOt2</span>  <span class="selector-class">.contentBox</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"2 ''"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*……*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundMe1</span> <span class="selector-class">.contentBox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"1 ''"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundMe2</span> <span class="selector-class">.contentBox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"2 ''"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*……*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundMe1</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.soundMe2</span> <span class="selector-class">.wordBox</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*……*/</span></span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-6"><a href="#Talk-is-cheap-6" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>构建了<code>insertContent()</code>方法构建页面，使用<code>scrollTop()</code>方法使填充的新的对话框出现再最下边;</li><li>构建了<code>spoint</code>与<code>epoint</code>两个参数，判断录音时间；</li><li>构建<code>recode()</code>方法，使用<code>setInterval()</code>方法，限制录音超过60s后停止（因为微信JS-SDK限制录音时长最多为60s）；</li><li>构建<code>feedback</code>参数，为之后翻译提供反馈；</li><li>使用伪类实现对话前后的音频时长；</li></ol><h3 id="已知兼容性问题"><a href="#已知兼容性问题" class="headerlink" title="已知兼容性问题"></a>已知兼容性问题</h3><ol><li>部分华为手机，长按后弹出弹出菜单，检测<code>document</code>的<code>oncontextmenu</code>事件，阻止默认事件<code>e.preventDefault()</code>；</li><li>微信开发者工具调试时，超过60s后会因为<code>alert()</code>会触发一次<code>touchend</code>事件，真正抬手后又会触发一次<code>touchend</code>，真机运行时无此问题；</li></ol><h2 id="5）撰写录音播放代码逻辑"><a href="#5）撰写录音播放代码逻辑" class="headerlink" title="5）撰写录音播放代码逻辑"></a>5）撰写录音播放代码逻辑</h2><p>在构建页面时将localid写到对应对话语句中，通过该localid对应相应的录音。</p><h3 id="Show-me-the-code-7"><a href="#Show-me-the-code-7" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">'touchstart'</span>, <span class="string">'.iPlayVoice'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>),</span><br><span class="line">        _localId = $<span class="keyword">this</span>.data(<span class="string">"localid"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($<span class="keyword">this</span>.hasClass(<span class="string">"playing"</span>)) &#123;</span><br><span class="line">        wx.stopVoice(&#123;</span><br><span class="line">            localId: _localId</span><br><span class="line">        &#125;);</span><br><span class="line">        $<span class="keyword">this</span>.removeClass(<span class="string">"playing"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">".playing"</span>).not($<span class="keyword">this</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            _stoplocalId = $(<span class="keyword">this</span>).data(<span class="string">"localid"</span>);</span><br><span class="line">            $(<span class="keyword">this</span>).removeClass(<span class="string">"playing"</span>);</span><br><span class="line">            wx.stopVoice(&#123;</span><br><span class="line">                localId: _stoplocalId</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        wx.playVoice(&#123;</span><br><span class="line">            localId: _localId</span><br><span class="line">        &#125;);</span><br><span class="line">        $<span class="keyword">this</span>.addClass(<span class="string">"playing"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wx.onVoicePlayEnd(&#123;</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".playing"</span>).removeClass(<span class="string">"playing"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-7"><a href="#Talk-is-cheap-7" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>使用<code>$(document).on(&#39;touchstart&#39;, &#39;.iPlayVoice&#39;, function() {})</code>为<code>.iPlayVoice</code>动态绑定事件；</li><li>使用<code>playing</code>类名，控制播放时的状态；</li></ol><hr><h1 id="四-实现语音评价功能"><a href="#四-实现语音评价功能" class="headerlink" title="四 实现语音评价功能"></a>四 实现语音评价功能</h1><p>开篇的技术选型时已经将前因后果说明了。现在就写借助微信<code>JS-SDK</code>中的<code>wx.translateVoice()</code>方法实现语音评价功能的具体实现。具体流程为<code>引入示例json</code>、<code>获取语音翻译结果</code>、<code>语音结果转为拼音</code>、<code>结果比对</code>、<code>反馈评价</code>。</p><h2 id="1）引入示例json"><a href="#1）引入示例json" class="headerlink" title="1）引入示例json"></a>1）引入示例json</h2><p>将示例的数据写成json，用<code>requirejs</code>引入。</p><h3 id="Show-me-the-code-8"><a href="#Show-me-the-code-8" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> word = &#123;</span><br><span class="line">  keyword: [&#123;</span><br><span class="line">      order: <span class="number">1</span>,</span><br><span class="line">      content: <span class="string">"请说：&lt;br /&gt;What's your name."</span>,</span><br><span class="line">      matched: <span class="string">"我次要儿内幕,我想那,我次有那么"</span>,</span><br><span class="line">      localId: <span class="string">"-1"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      order: <span class="number">2</span>,</span><br><span class="line">      content: <span class="string">"请说：&lt;br /&gt;How are you."</span>,</span><br><span class="line">      matched: <span class="string">"好啊有"</span>,</span><br><span class="line">      localId: <span class="string">"-1"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      order: <span class="number">3</span>,</span><br><span class="line">      content: <span class="string">"请说：&lt;br /&gt;Nice to meet you."</span>,</span><br><span class="line">      matched: <span class="string">"挨次图密特油"</span>,</span><br><span class="line">      localId: <span class="string">"-1"</span></span><br><span class="line">    &#125;],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-8"><a href="#Talk-is-cheap-8" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li><code>content</code>数据项，标识的是引导语；</li><li><code>matched</code>项标识的是匹配内容，通过“，”分隔多个匹配内容，以提高匹配度；</li></ol><h2 id="2）获取语音翻译结果"><a href="#2）获取语音翻译结果" class="headerlink" title="2）获取语音翻译结果"></a>2）获取语音翻译结果</h2><h3 id="Show-me-the-code-9"><a href="#Show-me-the-code-9" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx.translateVoice(&#123;</span><br><span class="line">    localId: <span class="string">''</span>, <span class="comment">// 需要识别的音频的本地Id，由录音相关接口获得</span></span><br><span class="line">    isShowProgressTips: <span class="number">1</span>, <span class="comment">// 默认为1，显示进度提示</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        alert(res.translateResult); <span class="comment">// 语音识别的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">    fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-9"><a href="#Talk-is-cheap-9" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><p>翻译接口主要依靠<code>localId</code>来完成一系列的工作，成功后返回一段json格式的数据。</p><h2 id="3）语音结果转为拼音"><a href="#3）语音结果转为拼音" class="headerlink" title="3）语音结果转为拼音"></a>3）语音结果转为拼音</h2><p>此步骤主要将返回的内容转换成拼音。借助的是@sxei（小茗同学）的一个库，地址为<a href="https://github.com/sxei/pinyinjs" target="_blank" rel="noopener">github</a>。<br>因为只需要转换成无声掉的拼音，那么只需要引入<code>pinyin_dict_notone.js</code>与<code>pinyinUtil.js</code>两个文件，使用<code>pinyinUtil.getPinyin(&#39;&#39;)</code>方法将汉字转化成拼音。</p><h2 id="4）结果比对"><a href="#4）结果比对" class="headerlink" title="4）结果比对"></a>4）结果比对</h2><p>比对语音翻译的拼音与预置的信息的拼音进行比对，返回匹配程度。因为预置的结果有多个，取其中匹配程度最高的的一项。</p><h3 id="Show-me-the-code-10"><a href="#Show-me-the-code-10" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str_User = pinyinUtil.getPinyin(res.translateResult.split(<span class="string">"。"</span>)[<span class="number">0</span>]),</span><br><span class="line">    str_Ans = word.keyword[R.options.iOrder].matched.split(<span class="string">","</span>),</span><br><span class="line">    matchedArray = <span class="keyword">new</span> <span class="built_in">Array</span>(),</span><br><span class="line">    matchedNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str_Ans.length; i++) &#123;</span><br><span class="line">    matchedArray[i] = strSimilarity2Percent(Trim(str_User), Trim(pinyinUtil.getPinyin(str_Ans[i])));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">matchedNum = arrayMax(matchedArray);</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-10"><a href="#Talk-is-cheap-10" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><ol><li>返回的json数据，返回结果的key为translateResult；</li><li>返回的结果有“。”，故需要使用<code>res.translateResult.split(&quot;。&quot;)[0]</code>将“。”排除；</li><li>使用了三个自定义方法，<code>strSimilarity2Percent()</code>返回匹配程度、<code>Trim()</code>排除字符串中的空格、<code>arrayMax()</code>返回数组中的最大值。相关方法存放在<code>unit.js</code>中；</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个字符串的相似程度，并返回相差字符个数</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  s  字符串1</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  t  字符串2</span></span><br><span class="line"><span class="comment"> * @returns  &#123;number&#125;  d[n][m]  字符串差异个数</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-03-02</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strSimilarity2Number</span>(<span class="params">s, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n = s.length,</span><br><span class="line">    m = t.length,</span><br><span class="line">    d = [];</span><br><span class="line">  <span class="keyword">var</span> i, j, s_i, t_j, cost;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> m;</span><br><span class="line">  <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    d[i] = [];</span><br><span class="line">    d[i][<span class="number">0</span>] = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= m; j++) &#123;</span><br><span class="line">    d[<span class="number">0</span>][j] = j;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    s_i = s.charAt(i - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">      t_j = t.charAt(j - <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span> (s_i == t_j) &#123;</span><br><span class="line">        cost = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cost = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      d[i][j] = Minimum(d[i - <span class="number">1</span>][j] + <span class="number">1</span>, d[i][j - <span class="number">1</span>] + <span class="number">1</span>, d[i - <span class="number">1</span>][j - <span class="number">1</span>] + cost);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> d[n][m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个字符串的相似程度，并返回相似度百分比</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  s  字符串1</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  t  字符串2</span></span><br><span class="line"><span class="comment"> * @returns  &#123;number&#125;     字符串差异百分比</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-03-02</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strSimilarity2Percent</span>(<span class="params">s, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> l = s.length &gt; t.length ? s.length : t.length;</span><br><span class="line">  <span class="keyword">var</span> d = strSimilarity2Number(s, t);</span><br><span class="line">  <span class="keyword">return</span> (<span class="number">1</span> - d / l).toFixed(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Minimum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a &lt; b ? (a &lt; c ? a : c) : (b &lt; c ? b : c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 去除字符串中的空格</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 去除字符串中的空格，</span></span><br><span class="line"><span class="comment"> * 如果不加参数"g",只去除字符串前后空格；</span></span><br><span class="line"><span class="comment"> * 如果加参数"g",去除字符串全部空格；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  str        目标字符串</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  is_global  是否检测整个字符串，如果是，输入为 "g",其他情况无视该参数</span></span><br><span class="line"><span class="comment"> * @returns  &#123;string&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-03-02</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Trim</span>(<span class="params">str, is_global</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result,</span><br><span class="line">    _is_global = (<span class="keyword">typeof</span>(is_global) !== <span class="string">"undefined"</span>) ? is_global : <span class="string">"n"</span>;</span><br><span class="line">  result = str.replace(<span class="regexp">/(^\s+)|(\s+$)/g</span>, <span class="string">""</span>);</span><br><span class="line">  <span class="keyword">if</span> (_is_global.toLowerCase() == <span class="string">"g"</span>) &#123;</span><br><span class="line">    result = result.replace(<span class="regexp">/\s/g</span>, <span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取字符串的长度</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 获取字符串的长度，</span></span><br><span class="line"><span class="comment"> * 汉字为两个字符长度，英语级其他符号为1个长度；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;string&#125;  val        目标字符串</span></span><br><span class="line"><span class="comment"> * @returns  &#123;number&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-03-05</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getByteLen</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; val.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = val.charAt(i);</span><br><span class="line">    <span class="keyword">if</span> (a.match(<span class="regexp">/[^\x00-\xff]/ig</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">      len += <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      len += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 移除数组中的某個元素   （改变数组长度）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;array&#125;  arr         目标数组</span></span><br><span class="line"><span class="comment"> * @param    &#123;any&#125;    item      要从数组中移除的元素</span></span><br><span class="line"><span class="comment"> * @returns  &#123;array&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-03-06</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeWithoutCopy</span>(<span class="params">arr, item</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] == item) &#123;</span><br><span class="line">      arr.splice(i, <span class="number">1</span>);</span><br><span class="line">      i--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 找出数组中的最小值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;array&#125;  arr       目标数组</span></span><br><span class="line"><span class="comment"> * @returns  &#123;number&#125; min       数组最小值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-04-19</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayMin</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> min = arr[<span class="number">0</span>],</span><br><span class="line">    len = arr.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">      min = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 找出数组中的最大值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param    &#123;array&#125;  arr       目标数组</span></span><br><span class="line"><span class="comment"> * @returns  &#123;number&#125; max       数组最小值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-04-19</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayMax</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> max = arr[<span class="number">0</span>],</span><br><span class="line">    len = arr.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">      max = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5）反馈评价"><a href="#5）反馈评价" class="headerlink" title="5）反馈评价"></a>5）反馈评价</h2><p>根据评价结果的情况，分为三档：</p><blockquote><p>matchedNum &gt;= 0.8 ———- <code>great</code><br>0.8 &gt; matchedNum &gt;= 0.6 – <code>good</code><br>matchedNum &lt; 0.6  ———– <code>normal</code></p></blockquote><p>同时在此时对小于0.5s的录音予以忽略。</p><h3 id="Show-me-the-code-11"><a href="#Show-me-the-code-11" class="headerlink" title="Show me the code"></a>Show me the code</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">translate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//结束录音并识别语音</span></span><br><span class="line">    wx.stopRecord(&#123;</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            localId = res.localId;</span><br><span class="line">            $(<span class="string">".voice-remote"</span>).addClass(<span class="string">"vrPause"</span>);</span><br><span class="line"></span><br><span class="line">            wx.translateVoice(&#123;</span><br><span class="line">                localId: localId,</span><br><span class="line">                complete: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> voice_time = <span class="built_in">Math</span>.abs(R.options.epoint - R.options.point),</span><br><span class="line">                        _iClass = <span class="string">"soundMe"</span> + <span class="built_in">Math</span>.round(voice_time / <span class="number">1000</span>);</span><br><span class="line">                    <span class="keyword">if</span> (res.hasOwnProperty(<span class="string">'translateResult'</span>) &amp;&amp; voice_time &gt; <span class="number">500</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> str_User = pinyinUtil.getPinyin(res.translateResult.split(<span class="string">"。"</span>)[<span class="number">0</span>]),</span><br><span class="line">                            str_Ans = word.keyword[R.options.iOrder].matched.split(<span class="string">","</span>),</span><br><span class="line">                            matchedArray = <span class="keyword">new</span> <span class="built_in">Array</span>(),</span><br><span class="line">                            matchedNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str_Ans.length; i++) &#123;</span><br><span class="line">                            matchedArray[i] = strSimilarity2Percent(Trim(str_User), Trim(pinyinUtil.getPinyin(str_Ans[i])));</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        matchedNum = arrayMax(matchedArray);</span><br><span class="line"></span><br><span class="line">                        R.insertContent(&#123;</span><br><span class="line">                            iType: <span class="number">2</span>,</span><br><span class="line">                            iClass: _iClass,</span><br><span class="line">                            iContent: localId,</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (matchedNum &gt;= <span class="number">0.8</span>) &#123;</span><br><span class="line"></span><br><span class="line">                            R.options.iOrder++;</span><br><span class="line">                            alert(R.feedback.great[<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">5</span>)] + <span class="string">"\r\n 您本次录音匹配程度为："</span> + (matchedNum * <span class="number">100</span>).toFixed(<span class="number">2</span>) + <span class="string">"% 。"</span>);</span><br><span class="line">                            <span class="keyword">if</span> (R.options.iOrder &lt; word.keyword.length) &#123;</span><br><span class="line">                                R.insertContent(&#123;</span><br><span class="line">                                    iType: <span class="number">1</span>,</span><br><span class="line">                                    iContent: word.keyword[R.options.iOrder].content,</span><br><span class="line">                                &#125;);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                alert(<span class="string">"恭喜，本次测试完成！"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (matchedNum &gt;= <span class="number">0.6</span>) &#123;</span><br><span class="line">                            alert(R.feedback.good[<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">5</span>)] + <span class="string">"\r\n 您本次录音匹配程度为："</span> + (matchedNum * <span class="number">100</span>).toFixed(<span class="number">2</span>) + <span class="string">"%！"</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            alert(R.feedback.normal[<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">5</span>)] + <span class="string">"\r\n 您本次录音匹配程度为："</span> + (matchedNum * <span class="number">100</span>).toFixed(<span class="number">2</span>) + <span class="string">"%！"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (voice_time &gt; <span class="number">500</span>) &#123;</span><br><span class="line">                        alert(<span class="string">'无法识别'</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (voice_time &lt;= <span class="number">500</span>) &#123;</span><br><span class="line">                        alert(<span class="string">"录音过短，请重新录音！"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="Talk-is-cheap-11"><a href="#Talk-is-cheap-11" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h3><p>使用<code>parseInt(Math.random() * 5)</code>生成随机数，使反馈语随机生成；</p><hr><h1 id="五-限制只允许微信客户端打开"><a href="#五-限制只允许微信客户端打开" class="headerlink" title="五 限制只允许微信客户端打开"></a>五 限制只允许微信客户端打开</h1><p>检测客户端版本的<code>micromessenger</code>值，微信用的是浏览器内核是这个。</p><h2 id="Show-me-the-code-12"><a href="#Show-me-the-code-12" class="headerlink" title="Show me the code"></a>Show me the code</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否是微信</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returns  &#123;boolen&#125;       true 是微信  false  不是微信</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date     2018-05-29</span></span><br><span class="line"><span class="comment"> * @author   ReeCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iswx</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ua.indexOf(<span class="string">'micromessenger'</span>) != <span class="number">-1</span> ? <span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!iswx()) &#123;</span><br><span class="line">        <span class="built_in">document</span>.head.innerHTML = <span class="string">'&lt;title&gt;抱歉，出错了&lt;/title&gt;&lt;meta charset="utf-8"&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0"&gt;&lt;link rel="stylesheet" type="text/css" href="https://res.wx.qq.com/open/libs/weui/0.4.1/weui.css"&gt;'</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.innerHTML = <span class="string">'&lt;div class="weui_msg"&gt;&lt;div class="weui_icon_area"&gt;&lt;i class="weui_icon_info weui_icon_msg"&gt;&lt;/i&gt;&lt;/div&gt;&lt;div class="weui_text_area"&gt;&lt;h4 class="weui_msg_title"&gt;请在微信客户端打开链接&lt;/h4&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        R.init();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Talk-is-cheap-12"><a href="#Talk-is-cheap-12" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>判断如果是微信浏览器，对<code>对象R</code>进行初始化，如果不是，返回请在微信客户端打开；</p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>絮絮叨叨终于总结好了。过段时间用小程序对该功能进行重写。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近接受了一个新的需求，希望制作一个基于微信的英语语音评价页面。即点击录音按钮，用户录音说出预设的英文，根据用户的发音给出对应的评价。&lt;br&gt;以下是简单的Demo：&lt;br&gt;&lt;img src=&quot;/2018/05/09/reecode/qrcode.png&quot;&gt;&lt;br&gt;&lt;!-- 
      
    
    </summary>
    
      <category term="前端" scheme="https://reecode.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="https://reecode.github.io/tags/Javascript/"/>
    
      <category term="微信" scheme="https://reecode.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="录音" scheme="https://reecode.github.io/tags/%E5%BD%95%E9%9F%B3/"/>
    
      <category term="前端" scheme="https://reecode.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
